>>>>>>>>>>>>>>>>
测试学习服务器
192.168.10.16 
工作目录
/usr/local/java-work
<<<<<<<<<<<<<<<


1、启动jar
启动参数位置
springboot参数放在jar包之后
nohup java -jar jvm.jar --spring.profiles.active=prod > jvm.log 2>&1 &

jvm参数放在jar包之前
nohup java -jar -Xverify:none jvm.jar  > jvm.log 2>&1 & (参数-Xverify:none生效)

#注意：
nohup java -jar jvm.jar  -Xverify:none  > jvm.log 2>&1 &(参数-Xverify:none放在jar之后，可以启动成功但是参数-Xverify:none不会生效)


#多参数启动示例(后台启动模式)
nohup java -jar \
-Djava.rmi.server.hostname=192.168.10.16 \
-Dcom.sun.management.jmxremote \
-Dcom.sun.management.jmxremote.rmi.port=7098 \
-Dcom.sun.management.jmxremote.port=7099 \
-Dcom.sun.management.jmxremote.authenticate=false \
-Dcom.sun.management.jmxremote.ssl=false \
-XX:+HeapDumpOnOutOfMemoryError \
-XX:HeapDumpPath=/tmp/gc.hprof \
-Xverify:none \
-XX:+PrintCommandLineFlags \
-XX:+PrintFlagsFinal \
-XX:InitialHeapSize=4164069376 \
-XX:MaxHeapSize=4164069376 \
-Xss2m \
jvm.jar  > jvm.log 2>&1 & 


#多参数启动实例(监听启动模式)
java -jar \
-Djava.rmi.server.hostname=192.168.10.16 \
-Dcom.sun.management.jmxremote \
-Dcom.sun.management.jmxremote.rmi.port=7098 \
-Dcom.sun.management.jmxremote.port=7099 \
-Dcom.sun.management.jmxremote.authenticate=false \
-Dcom.sun.management.jmxremote.ssl=false \
-XX:+HeapDumpOnOutOfMemoryError \
-XX:HeapDumpPath=/tmp/gc.hprof \
-Xverify:none \
-XX:+PrintCommandLineFlags \
-XX:+PrintFlagsFinal \
-XX:+PrintGCDetails \
jvm.jar



2、查看当前java进程虚拟机参数列表
jps -v | grep (进程ID/jar名称)

3、获取所有可设置参数及值的大小
java -XX:+PrintFlagsFinal -version
java -XX:+PrintFlagsFinal -version > flags.txt


>>>测试参数
-XX:+PrintCommandLineFlags
-Xms100m
-Xmx100m
-XX:+PrintGCDetails
-XX:+HeapDumpOnOutOfMemoryError
-XX:SurvivorRatio=8
-XX:HeapDumpPath=E:/test/gc.hprof
<<<
-XX:G1ConcRefinementThreads=8
-XX:GCDrainStackTargetSize=64
-XX:InitialHeapSize=260254336
-XX:MaxHeapSize=4164069376
-XX:+PrintCommandLineFlags
-XX:ReservedCodeCacheSize=251658240
-XX:+SegmentedCodeCache
-XX:+UseCompressedClassPointers
-XX:+UseCompressedOops
-XX:+UseG1GC




#参考https://segmentfault.com/a/1190000038320962
1、查看jvm全局参数列表(如果有自定义编辑过的参数将会显示编辑后的参数)
类似k:=v形式
(uintx InitialHeapSize:= 104857600{product})

java -XX:+PrintFlagsFinal -version

2、查看jvm运行参数
jinfo -flags pid

3、查看具体参数值
jinfo -flag InitialHeapSize pid

4、开启/关闭某个JVM参数
jinfo -flag [+|-]name pid

5、修改某个JVM进程的值
jinfo -flag name=value pid

6、输出当前JVM进程所有的系统属性
jinfo -sysprops pid


-XX:+PrintFlagsFinal
-Xms100m -Xmx100m
-Xss200k -XX:+PrintGCDetails
-XX:+HeapDumpOnOutOfMemoryError
-XX:SurvivorRatio=8
-XX:HeapDumpPath=E:/test/gc.hprof

7、JDK11输出heap dump和gc log
-XX:+PrintFlagsFinal -Xms100M -Xmx100M -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=D:\heap.hprof -Xlog:gc*:D:\gc.log










